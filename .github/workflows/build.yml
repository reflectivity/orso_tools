name: Build PyInstaller Package
permissions:
  id-token: write
  contents: write
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true
        default: 'development'

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Set version
      run: |
        if ("${{ github.ref_type }}" -eq "tag") {
          $VERSION = "${{ github.ref_name }}" -replace '^v',''
        } else {
          $VERSION = "${{ github.event.inputs.version }}"
        }
        echo "VERSION=$VERSION" >> $env:GITHUB_ENV
        echo "Building version: $VERSION"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install git+https://github.com/reflectivity/orsopy@c253d8e7b80c4d4aad3c5d1b463c9781f6707820
        pip install scipy<1.16.0
        pip install -r requirements.txt

    - name: Build with PyInstaller
      run: |
        pyinstaller build_exe.spec

    - name: Create Release Asset
      run: |
        cp -r examples dist/orso_tools/
        cd dist
        7z a -r -tzip "orso_tools_win64_${{ env.VERSION }}.zip" orso_tools

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows
        path: dist/orso_tools_win64_${{ env.VERSION }}.zip

  publish-pypi:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel

    - name: Build package
      run: python -m build

    - name: Publish to PyPI
      if: github.event_name != 'workflow_dispatch'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip-existing: true

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: pip
        path: dist/*

  release:
    if: github.event_name != 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: [build-windows, publish-pypi]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: windows
    - uses: actions/download-artifact@v4
      with:
        name: pip
    - uses: ncipollo/release-action@v1
      with:
        artifacts: "*.zip,*.tar.gz"
        token: ${{ secrets.GITHUB_TOKEN }}
        allowUpdates: true
        generateReleaseNotes: true
